Hydration failed because the server rendered HTML didn't match the client. As a result this tree will be regenerated on the client. This can happen if a SSR-ed Client Component used:

- A server/client branch `if (typeof window !== 'undefined')`.
- Variable input such as `Date.now()` or `Math.random()` which changes each time it's called.
- Date formatting in a user's locale which doesn't match the server.
- External changing data without sending a snapshot of it along with the HTML.
- Invalid HTML tag nesting.

It can also happen if the client has a browser extension installed which messes with the HTML before React loaded.

See more info here: https://nextjs.org/docs/messages/react-hydration-error


  ...
    <HTTPAccessFallbackErrorBoundary pathname="/" notFound={<SegmentViewNode>} forbidden={undefined} ...>
      <RedirectBoundary>
        <RedirectErrorBoundary router={{...}}>
          <InnerLayoutRouter url="/" tree={[...]} cacheNode={{lazyData:null, ...}} segmentPath={[...]}>
            <SegmentViewNode type="page" pagePath="page.tsx">
              <SegmentTrieNode>
              <Home>
                <main className="min-h-screen">
                  <HeroSection>
                    <section className="relative b...">
                      <div className="container-...">
                        <div className="grid lg:gr...">
                          <div className="text-cente...">
                            <div>
                            <h1>
                            <p>
                            <div className="flex flex-...">
                              <SocialSignInButton>
                              <SocialSignInButton provider="facebook" onClick={function onClick} loading={false}>
+                               <button
+                                 onClick={function onClick}
+                                 disabled={false}
+                                 className={"\n        bg-[#1877F2] hover:bg-[#166FE5]\n        text-white\n        ..."}
+                                 type="button"
+                               >
                            ...
                          ...
                      ...
                  ...
            ...
          ...
components/ui/SocialSignInButton.tsx (55:5) @ SocialSignInButton


  53 |
  54 |   return (
> 55 |     <button
     |     ^
  56 |       onClick={onClick}
  57 |       disabled={loading}
  58 |       className={`
Call Stack
14

Show 10 ignore-listed frame(s)
button
<anonymous>
SocialSignInButton
components/ui/SocialSignInButton.tsx (55:5)
HeroSection
./components/landing/HeroSection.tsx
Home
app/page.tsx (14:7)